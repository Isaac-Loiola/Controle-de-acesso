<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAf0AAAGSCAYAAADpbhgHAAAABGdBTUEAALGPC/xhBQAACyJJREFUeF7t
        3U1SVNkWhmEn4EjsOAyH5HAchB0nUl17kECGID8BJsq+sbxohedYJWruKFnf80R8HdSq1lmvQJI+efIA
        Y4xnY4yXY4zXY4y3Y4ybAQD8V6rD1ePqcvX52bLdP22M8WKM8Wb5fwIA/jjV6xfLlv/QGOPpGOPV8r8G
        APzxqt9Pl23/rjHG8zHGX8v/AgDwaFTHny8b/4374G+WfxIAeHSq598P//2X9H2GDwB9VNfXX+r3PXwA
        aOnVMvj1Kn0AoKe/X9Xvx/IAoLU3X4Jfb7wDAPT2rKJf7+QDAPT2sqJfb+EHAPT2uqJf790LAPT2tqLv
        H88BgP5uKvoAQADRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCE
        EH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQf
        AEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQ
        og8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgD
        QAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC
        9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0A
        CCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRD7Hb7cb19bWZ2Wp1
        H8gg+o3d3NyM09PTcXh4OA4ODszM/nF1J+pe1N2gL9Fvqh7e5UNtZvaQ1f2gJ9Fv5tOnT2O73a4eYjOz
        n1ndkbon9CL6zQi+me1rdU/oRfQbOT8/Xz20Zma/s7or9CH6TdSX4bxgz8z2vborvszfh+g3cXl5uXpY
        zcz2sbov9CD6Tbx79271oJqZ7WN1X+hB9Js4OjpaPahmZvtY3Rd6EP0mfD/fzGat7gs9iH4Tom9msyb6
        fYh+E6JvZrMm+n2IfhOib2azJvp9iH4Tom9msyb6fYh+E6JvZrMm+n2IfhOib2azJvp9iH4Tom9msyb6
        fYh+E6JvZrMm+n2IfhOib2azJvp9iH4Tom9msyb6fYh+E6JvZrMm+n2IfhOib2azJvp9iH4Tom9msyb6
        fYh+E6JvZrMm+n2IfhOib2azJvp9iH4Tom9msyb6fYh+E6JvZrMm+n2IfhOib2azJvp9iH4Tom9msyb6
        fYh+E6JvZrMm+n2IfhOib2azJvp9iH4Tom9msyb6fYh+E6JvZrMm+n2IfhObzWb1oJqZ7WN1X+hB9JvY
        brerB9XMbB+r+0IPot/E+fn56kE1M9vH6r7Qg+g3sdvtVg+qmdk+VveFHkS/kdPT09XDamb2O6u7Qh+i
        38jHjx+9oM/M9ra6J3VX6EP0m7m5uVk9uGZmv7K6J/Qi+g19+PBhHB8frx5gM7OHrO5H3RH6Ef3G6hW3
        vtxvZg9d3Quv1O9N9APU39gvLi7G2dnZeP/+vZnZ19VdqPvgM/sMog8AIUQfAEKIPgCEEH0ACCH6ABBC
        9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0A
        CCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKI
        PgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8A
        IUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjR
        B4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEg
        hOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6
        ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCE
        EH0ACCH6ABBC9AEghOgDQAjRB4AQog8AIUQfAEKIPgCEEH0ACCH6AW5vb8f19fW4vLwcFxcXZmZfV3eh
        7kPdCfoT/caurq7GycnJODg4MDP74epe1N2gL9FvqP7Gvt1uVw+0mdlDVvfDZ/49iX4zu91uHB0drR5i
        M7OfWd2Ruif0IvqN3N3djePj49XDa2b2K6t7UneFPkS/kbOzs9VDa2b2O6u7Qh+i30R9/235sJqZ7WO+
        v9+H6DdRP3qzfFDNzPaxui/0IPpNeLW+mc1a3Rd6EP0mNpvN6kE1M9vH6r7Qg+g3cXh4uHpQzcz2sbov
        9CD6TYi+mc2a6Pch+k2IvpnNmuj3IfpNiL6ZzZro9yH6TYi+mc2a6Pch+k2IvpnNmuj3IfpNiL6ZzZro
        9yH6TYi+mc2a6Pch+k2IvpnNmuj3IfpNiL6ZzZro9yH6TYi+mc2a6Pch+k2IvpnNmuj3IfpNiL6ZzZro
        9yH6TYi+mc2a6Pch+k2IvpnNmuj3IfpNiL6ZzZro9yH6TYi+mc2a6Pch+k2IvpnNmuj3IfpNiL6ZzZro
        9yH6TYi+mc2a6Pch+k2IvpnNmuj3IfpNiL6ZzZro9yH6TYi+mc2a6Pch+k2IvpnNmuj3IfpNbDab1YNq
        ZraP1X2hB9FvYrvdrh5UM7N9rO4LPYh+ExcXF6sH1cxsH6v7Qg+i38Tt7e3qQTUz28fqvtCD6Ddydna2
        eljNzH5ndVfoQ/Qbubu7G8fHx6uH1szsV1b3pO4KfYh+M7vdbhwdHa0eXjOzn1ndkbon9CL6DdX337ya
        38x+dXU/fB+/J9Fv7OrqapycnKweaDOz763uRd0N+hL9APU39uvr63F5efn5R2/MzL6s7kLdB5/ZZxB9
        AAgh+gAQQvQBIIToA0AI0QeAEKIPACFEHwBCiD4AhBB9AAgh+gAQQvQBIIToA0AI0QeAEKIPACFEHwBC
        iD4AhBB9AAgh+gAQQvQBIIToA0AI0QeAEKIPACFEHwBCiD4AhBB9AAgh+gAQQvQBIIToA0AI0QeAEKIP
        ACFEHwBCiD4AhBB9AAgh+gAQQvQBIIToA0AI0QeAEKIPACFEHwBCiD4AhBB9AAgh+gAQQvQBIIToA0AI
        0QeAEKIPACFEHwBCiD4AhBB9AAgh+gAQQvQBIIToA0AI0QeAEKIPACFEHwBCiD4AhBB9AAgh+gAQQvQB
        IIToA0AI0QeAEKIPACFEHwBCiD4AhBB9AAgh+gAQQvQBIIToA0AI0QeAEKIPACFEHwBCiD4AhBB9AAhR
        0b9ZfhAAaOemov92+VEAoJ23Ff3Xy48CAO28rui/XH4UAGjnZUX/2fKjAEA7z56UMcab5a8AAG28+Rz8
        ++i/WP4qANDGi6/Rvw//q+XvAAAevVffBP8++k/HGH8tfycA8GhV158um//ZGOP5GGOz/BMAwKNTPX++
        bP037sPvM34AeLyq4/8e/C/uv9Tve/wA8PhUv7//Jf1/c/+qfj/OBwB/vur1t6/S/xX3b+BT79xXb9lb
        79XvH+kBgP9Odbh6XF2uPv//jXd+4H9Pt7ZeKQuLjwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnLogar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKUAAAAyCAYAAAA9SBshAAAABGdBTUEAALGPC/xhBQAAAT9JREFUeF7t
        3cFpAmEUhVHrsQF7sScrshE7EQLhhqdjEgWDkETv4hyY7aw+5uefxXur1R1JNkl2SQ5JjoHfm46mp+lq
        c9vcXUnWSfZJ3pYH/tqlrelsfdvglSTbJO+3b4B/NL1tb1s8WYKEV7kOczmyfSF5penv6yhfznZ4tf0l
        yLllu9DQYDrcTJRzPRclDabD3UQ5/42gxWGi9GOcJseJEqqIkjqipI4oqSNK6oiSOqKkjiipI0rqiJI6
        oqSOKKkjSuqIkjqipI4oqSNK6oiSOqKkjiipI0rqiJI6oqSOKKkjSuqIkjqipI4oqSNK6oiSOhOlUYA0
        OY0CNDSVJqehqcZL0+JzvLRB/LQ4D+K3soQi55UlljtR4nq50xKmNXi80o/7GX0xeab7C0MvrFbmCR5f
        rfydJfT8g4eW0H8AfuNGAvkpXukAAAAASUVORK5CYII=
</value>
  </data>
</root>